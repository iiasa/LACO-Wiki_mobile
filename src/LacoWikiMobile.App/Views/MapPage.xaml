<?xml version="1.0" encoding="utf-8" ?>

<ContentPage xmlns="http://xamarin.com/schemas/2014/forms" xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
	xmlns:maps="clr-namespace:Xamarin.Forms.Maps;assembly=Xamarin.Forms.Maps"
	xmlns:customMap="clr-namespace:LacoWikiMobile.App.UserInterface.CustomMap;assembly=LacoWikiMobile.App"
	xmlns:ui="clr-namespace:LacoWikiMobile.App.UserInterface;assembly=LacoWikiMobile.App"
	xmlns:ve="clr-namespace:LacoWikiMobile.App.UserInterface.VisualElementExtensions;assembly=LacoWikiMobile.App"
	x:Class="LacoWikiMobile.App.Views.MapPage" Title="{Binding Title}">
	<ContentPage.ToolbarItems>
		<ToolbarItem Icon="ic_upload_white_24dp" Command="{Binding NavigateToValidationUploadCommand}"></ToolbarItem>
	</ContentPage.ToolbarItems>
	<ContentPage.Content>
		<RelativeLayout>
			<customMap:CustomMap StyleClass="Map" Points="{Binding SamplePointsViewModel.Points}" MapClickCommand="{Binding MapClickCommand}" x:Name="MyMap"
				IsShowingUser="true" MapType="Hybrid" ShowTileLayer="{Binding ShowTileLayer}"
				RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=0}"
				RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0, Constant=0}"
				RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1, Constant=0}"
				RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1, Constant=-52}" />

			<StackLayout Orientation="Vertical"
				RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=16}"
				RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0, Constant=16}">
				<Frame WidthRequest="40" HeightRequest="40" Margin="0" Padding="0" BackgroundColor="{Binding TileLayerButtonBackgroundColor}"
					CornerRadius="20" HasShadow="True">
					<Image Source="ic_layers_white_24dp" VerticalOptions="Center" HorizontalOptions="Center" />
					<Frame.GestureRecognizers>
						<TapGestureRecognizer Command="{Binding ToogleTileLayerCommand}" />
					</Frame.GestureRecognizers>
				</Frame>
			</StackLayout>

			<RelativeLayout BackgroundColor="{Binding NavigationPaneBackgroundColor}"
				RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=0}"
				RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1, Constant=-52}"
				RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1, Constant=0}"
				RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0, Constant=52}">
				<ui:AutoFontSizedLabel Text="{Binding NavigationText}" TextColor="White" VerticalTextAlignment="Center" HorizontalTextAlignment="Center"
					RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=52}"
					RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0, Constant=8}"
					RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1, Constant=-104}"
					RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1, Constant=-16}" />
				<Image Source="ic_navigation_white_36dp" ve:Extensions.AnimatedRotation="{Binding NavigationDirection}" IsVisible="{Binding ShowNavigationDirection}" Margin="8"
					RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1, Constant=-60}"
					RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0, Constant=0}"
					RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=52}"
					RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0, Constant=52}" />
			</RelativeLayout>

			<Frame BackgroundColor="{Binding BackgroundColor}" IsVisible="{Binding  ViewSwitchLayer}"
			RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0}"
			RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0}"
			RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1}"
			RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1}">
				<StackLayout Orientation="Vertical" StyleClass="ListWithImage"
						RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=0}"
						RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0, Constant=0}"
						RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1, Constant=0}"
						RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1, Constant=0}">
					<ContentView StyleClass="Header">
						<Label Text="Layers list" />
					</ContentView>
					<RelativeLayout>
						<ScrollView ve:Extensions.AnimatedIsVisible="true">
							<ui:RepeaterStackLayout ItemsSource="{Binding LayerItems}" StyleClass="List">
								<ui:RepeaterStackLayout.ItemTemplate>
									<DataTemplate>
										<ContentView>
											<ContentView.GestureRecognizers>
												<TapGestureRecognizer Command="{Binding ItemTappedCommand}" />
											</ContentView.GestureRecognizers>
											<Grid BindingContext="{Binding .}">
												<Grid.RowDefinitions>
													<RowDefinition Height="56" />
												</Grid.RowDefinitions>
												<Grid.ColumnDefinitions>
													<ColumnDefinition Width="56" />
													<ColumnDefinition />
													<ColumnDefinition Width="56" />
												</Grid.ColumnDefinitions>

												<ContentView Grid.Row="0" Grid.Column="0" StyleClass="Image">
													<Frame>
														<Image Source="{Binding Icon}" Opacity="{Binding Opacity}" />
													</Frame>
												</ContentView>

												<ContentView Grid.Row="0" Grid.Column="1" StyleClass="FirstLine">
													<Label Margin="0" Text="{Binding Name}" />
												</ContentView>

												<ContentView Grid.Row="0" Grid.Column="2" Padding="0,0,16,0">
													<ContentView>
														<ui:Checkbox HorizontalOptions="End" VerticalOptions="Center" WidthRequest="26" HeightRequest="26" CheckColor="#009688" IsChecked="{Binding IsChecked}">
															<ui:Checkbox.Margin>
																<OnPlatform x:TypeArguments="Thickness">
																	<!-- See https://stackoverflow.com/questions/40990664/android-appcompatcheckbox-padding-margin-gravity -->
																	<On Platform="Android" Value="0,0,-1,0" />
																</OnPlatform>
															</ui:Checkbox.Margin>
														</ui:Checkbox>
													</ContentView>
												</ContentView>
											</Grid>
										</ContentView>
									</DataTemplate>
								</ui:RepeaterStackLayout.ItemTemplate>
							</ui:RepeaterStackLayout>
						</ScrollView>
						<Frame StyleClass="FloatingActionButton"
							BackgroundColor="{Binding CheckOK}"
							IsVisible="true"
							RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1, Constant=-72}"
							RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1, Constant=-124}"
							RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=56}"
							RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0, Constant=56}">
							<Frame.GestureRecognizers>
								<TapGestureRecognizer Command="{Binding ValidateSwitchLayerCommand}" />
							</Frame.GestureRecognizers>
							<RelativeLayout>
								<Image Source="ic_check_white_24dp"
							RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=0}"
							RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0, Constant=0}"
							RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1, Constant=0}"
							RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1, Constant=0}" />
							</RelativeLayout>
						</Frame>

					</RelativeLayout>
				</StackLayout>
			</Frame>

			<!--<Frame StyleClass="FloatingActionButton"
			BackgroundColor="{Binding PrimaryActionButtonBackgroundColor}"
			IsVisible="{Binding ShowPrimaryActionButton}"
			RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1, Constant=-72}"
			RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1, Constant=-124}"
			RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=56}"
			RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0, Constant=56}">
				<Frame.GestureRecognizers>
					<TapGestureRecognizer Command="{Binding PrimaryActionButtonTappedCommand}" />
				</Frame.GestureRecognizers>
				<RelativeLayout>
					<Image Source="ic_check_white_24dp"
					RelativeLayout.XConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=0}"
					RelativeLayout.YConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=0, Constant=0}"
					RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=1, Constant=0}"
					RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height, Factor=1, Constant=0}" />
				</RelativeLayout>
			</Frame>-->
		</RelativeLayout>
	</ContentPage.Content>
</ContentPage>